  


<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>aight/aight.min.js at master · shawnbot/aight · GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon-precomposed" sizes="57x57" href="apple-touch-icon-114.png" />
    <link rel="apple-touch-icon-precomposed" sizes="114x114" href="apple-touch-icon-114.png" />
    <link rel="apple-touch-icon-precomposed" sizes="72x72" href="apple-touch-icon-144.png" />
    <link rel="apple-touch-icon-precomposed" sizes="144x144" href="apple-touch-icon-144.png" />
    <link rel="logo" type="image/svg" href="http://github-media-downloads.s3.amazonaws.com/github-logo.svg" />
    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="bh3LLBC9USgQGjWfZ0DLX+AL7fCwhRnpY2/wZDCsRys=" name="csrf-token" />

    <link href="https://a248.e.akamai.net/assets.github.com/assets/github-2869fdd700237f10adaf1d01acc6faa615805273.css" media="screen" rel="stylesheet" type="text/css" />
    <link href="https://a248.e.akamai.net/assets.github.com/assets/github2-e88121cf5a6abbcf13f9f9ebafef11b05fc8886d.css" media="screen" rel="stylesheet" type="text/css" />
    


      <script src="https://a248.e.akamai.net/assets.github.com/assets/frameworks-f615f7544ba636b083d742a0b415479b5b674fd4.js" type="text/javascript"></script>
      <script src="https://a248.e.akamai.net/assets.github.com/assets/github-d72b04354f50d2ecac77e0929fa4e5d3f0e14c36.js" type="text/javascript"></script>
      

        <link rel='permalink' href='/shawnbot/aight/blob/eec60b91f4572ad339fc5b1fc134742cf87c6622/aight.min.js'>
    <meta property="og:title" content="aight"/>
    <meta property="og:type" content="githubog:gitrepository"/>
    <meta property="og:url" content="https://github.com/shawnbot/aight"/>
    <meta property="og:image" content="https://secure.gravatar.com/avatar/419ba35d2ff8c19a6728c66986839b08?s=420&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <meta property="og:site_name" content="GitHub"/>
    <meta property="og:description" content="aight - A collection of tools for making reasonable JavaScript and CSS work in IE8"/>
    <meta property="twitter:card" content="summary"/>
    <meta property="twitter:site" content="@GitHub">
    <meta property="twitter:title" content="shawnbot/aight"/>

    <meta name="description" content="aight - A collection of tools for making reasonable JavaScript and CSS work in IE8" />

  <link href="https://github.com/shawnbot/aight/commits/master.atom" rel="alternate" title="Recent Commits to aight:master" type="application/atom+xml" />

  </head>


  <body class="logged_out page-blob macintosh vis-public env-production  ">
    <div id="wrapper">

      

      

      

      


        <div class="header header-logged-out">
          <div class="container clearfix">

            <a class="header-logo-wordmark" href="https://github.com/">
              <img alt="GitHub" class="github-logo-4x" height="30" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov7@4x.png?1338945075" />
              <img alt="GitHub" class="github-logo-4x-hover" height="30" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov7@4x-hover.png?1338945075" />
            </a>

              
<ul class="top-nav">
    <li class="explore"><a href="https://github.com/explore">Explore GitHub</a></li>
  <li class="search"><a href="https://github.com/search">Search</a></li>
  <li class="features"><a href="https://github.com/features">Features</a></li>
    <li class="blog"><a href="https://github.com/blog">Blog</a></li>
</ul>


            <div class="header-actions">
                <a class="button primary" href="https://github.com/signup">Sign up for free</a>
              <a class="button" href="https://github.com/login?return_to=%2Fshawnbot%2Faight%2Fblob%2Fmaster%2Faight.min.js">Sign in</a>
            </div>

          </div>
        </div>


      

      


            <div class="site hfeed" itemscope itemtype="http://schema.org/WebPage">
      <div class="hentry">
        
        <div class="pagehead repohead instapaper_ignore readability-menu ">
          <div class="container">
            <div class="title-actions-bar">
              


<ul class="pagehead-actions">



    <li>
      <a href="/login?return_to=%2Fshawnbot%2Faight"
        class="minibutton js-toggler-target star-button entice tooltipped upwards"
        title="You must be signed in to use this feature" rel="nofollow">
        <span class="mini-icon mini-icon-star"></span>Star
      </a>
      <a class="social-count js-social-count" href="/shawnbot/aight/stargazers">
        119
      </a>
    </li>
    <li>
      <a href="/login?return_to=%2Fshawnbot%2Faight"
        class="minibutton js-toggler-target fork-button entice tooltipped upwards"
        title="You must be signed in to fork a repository" rel="nofollow">
        <span class="mini-icon mini-icon-fork"></span>Fork
      </a>
      <a href="/shawnbot/aight/network" class="social-count">
        16
      </a>
    </li>
</ul>

              <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
                <span class="repo-label"><span>public</span></span>
                <span class="mega-icon mega-icon-public-repo"></span>
                <span class="author vcard">
                  <a href="/shawnbot" class="url fn" itemprop="url" rel="author">
                  <span itemprop="title">shawnbot</span>
                  </a></span> /
                <strong><a href="/shawnbot/aight" class="js-current-repository">aight</a></strong>
              </h1>
            </div>

            
  <ul class="tabs">
    <li><a href="/shawnbot/aight" class="selected" highlight="[:repo_source, :repo_downloads, :repo_commits, :repo_tags, :repo_branches]">Code</a></li>
    <li><a href="/shawnbot/aight/network" highlight="[:repo_network]">Network</a></li>
    <li><a href="/shawnbot/aight/pulls" highlight="[:repo_pulls]">Pull Requests <span class='counter'>0</span></a></li>

      <li><a href="/shawnbot/aight/issues" highlight="[:repo_issues]">Issues <span class='counter'>2</span></a></li>



    <li><a href="/shawnbot/aight/graphs" highlight="[:repo_graphs, :repo_contributors]">Graphs</a></li>


  </ul>
  
<div class="tabnav">

  <span class="tabnav-right">
    <ul class="tabnav-tabs">
          <li><a href="/shawnbot/aight/tags" class="tabnav-tab" highlight="repo_tags">Tags <span class="counter ">3</span></a></li>
    </ul>
    
  </span>

  <div class="tabnav-widget scope">


    <div class="select-menu js-menu-container js-select-menu js-branch-menu">
      <a class="minibutton select-menu-button js-menu-target" data-hotkey="w" data-ref="master">
        <span class="mini-icon mini-icon-branch"></span>
        <i>branch:</i>
        <span class="js-select-button">master</span>
      </a>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container js-select-menu-pane">

        <div class="select-menu-modal js-select-menu-pane">
          <div class="select-menu-header">
            <span class="select-menu-title">Switch branches/tags</span>
            <span class="mini-icon mini-icon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-filters">
            <div class="select-menu-text-filter">
              <input type="text" id="commitish-filter-field" class="js-select-menu-text-filter js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
            </div> <!-- /.select-menu-text-filter -->
            <div class="select-menu-tabs">
              <ul>
                <li class="select-menu-tab">
                  <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
                </li>
                <li class="select-menu-tab">
                  <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
                </li>
              </ul>
            </div><!-- /.select-menu-tabs -->
          </div><!-- /.select-menu-filters -->

          <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket css-truncate" data-tab-filter="branches" data-filterable-for="commitish-filter-field" data-filterable-type="substring">


              <div class="select-menu-item js-navigation-item js-navigation-target selected">
                <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                <a href="/shawnbot/aight/blob/master/aight.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="master" rel="nofollow" title="master">master</a>
              </div> <!-- /.select-menu-item -->

              <div class="select-menu-no-results js-not-filterable">Nothing to show</div>
          </div> <!-- /.select-menu-list -->


          <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket css-truncate" data-tab-filter="tags" data-filterable-for="commitish-filter-field" data-filterable-type="substring">

              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                <a href="/shawnbot/aight/blob/v1.0.3/aight.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v1.0.3" rel="nofollow" title="v1.0.3">v1.0.3</a>
              </div> <!-- /.select-menu-item -->
              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                <a href="/shawnbot/aight/blob/v1.0.1/aight.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v1.0.1" rel="nofollow" title="v1.0.1">v1.0.1</a>
              </div> <!-- /.select-menu-item -->
              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                <a href="/shawnbot/aight/blob/v1.0/aight.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v1.0" rel="nofollow" title="v1.0">v1.0</a>
              </div> <!-- /.select-menu-item -->

            <div class="select-menu-no-results js-not-filterable">Nothing to show</div>

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

  </div> <!-- /.scope -->

  <ul class="tabnav-tabs">
    <li><a href="/shawnbot/aight" class="selected tabnav-tab" highlight="repo_source">Files</a></li>
    <li><a href="/shawnbot/aight/commits/master" class="tabnav-tab" highlight="repo_commits">Commits</a></li>
    <li><a href="/shawnbot/aight/branches" class="tabnav-tab" highlight="repo_branches" rel="nofollow">Branches <span class="counter ">1</span></a></li>
  </ul>

</div>

  
  
  


            
          </div>
        </div><!-- /.repohead -->

        <div id="js-repo-pjax-container" class="container context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:8adb9ec5a187219307aa1ed841e3b390 -->
<!-- blob contrib frag key: views10/v8/blob_contributors:v21:8adb9ec5a187219307aa1ed841e3b390 -->


<div id="slider">
    <div class="frame-meta">

      <p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

        <div class="breadcrumb">
          <span class='bold'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/shawnbot/aight" class="js-slide-to" data-direction="back" itemscope="url"><span itemprop="title">aight</span></a></span></span> / <strong class="final-path">aight.min.js</strong> <span class="js-zeroclipboard zeroclipboard-button" data-clipboard-text="aight.min.js" data-copied-hint="copied!" title="copy to clipboard"><span class="mini-icon mini-icon-clipboard"></span></span>
        </div>

      <a href="/shawnbot/aight/find/master" class="js-slide-to" data-hotkey="t" style="display:none">Show File Finder</a>


        
  <div class="commit file-history-tease">
    <img class="main-avatar" height="24" src="https://secure.gravatar.com/avatar/419ba35d2ff8c19a6728c66986839b08?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
    <span class="author"><a href="/shawnbot" rel="author">shawnbot</a></span>
    <time class="js-relative-date" datetime="2012-12-15T00:41:22-08:00" title="2012-12-15 00:41:22">December 15, 2012</time>
    <div class="commit-title">
        <a href="/shawnbot/aight/commit/eec60b91f4572ad339fc5b1fc134742cf87c6622" class="message">Firefox Element.prototype.textContent try/catch, v1.0.3</a>
    </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>1</strong> contributor</a></p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2>Users on GitHub who have contributed to this file</h2>
      <ul class="facebox-user-list">
        <li>
          <img height="24" src="https://secure.gravatar.com/avatar/419ba35d2ff8c19a6728c66986839b08?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
          <a href="/shawnbot">shawnbot</a>
        </li>
      </ul>
    </div>
  </div>


    </div><!-- ./.frame-meta -->

    <div class="frames">
      <div class="frame" data-permalink-url="/shawnbot/aight/blob/eec60b91f4572ad339fc5b1fc134742cf87c6622/aight.min.js" data-title="aight/aight.min.js at master · shawnbot/aight · GitHub" data-type="blob">

        <div id="files" class="bubble">
          <div class="file">
            <div class="meta">
              <div class="info">
                <span class="icon"><b class="mini-icon mini-icon-text-file"></b></span>
                <span class="mode" title="File Mode">file</span>
                  <span>8 lines (8 sloc)</span>
                <span>12.54 kb</span>
              </div>
              <div class="actions">
                <div class="button-group">
                      <a class="minibutton js-entice" href=""
                         data-entice="You must be signed in and on a branch to make or propose changes">Edit</a>
                  <a href="/shawnbot/aight/raw/master/aight.min.js" class="button minibutton " id="raw-url">Raw</a>
                    <a href="/shawnbot/aight/blame/master/aight.min.js" class="button minibutton ">Blame</a>
                  <a href="/shawnbot/aight/commits/master/aight.min.js" class="button minibutton " rel="nofollow">History</a>
                </div><!-- /.button-group -->
              </div><!-- /.actions -->

            </div>
                <div class="data type-javascript js-blob-data">
      <table cellpadding="0" cellspacing="0" class="lines">
        <tr>
          <td>
            <pre class="line_numbers"><span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
</pre>
          </td>
          <td width="100%">
                  <div class="highlight"><pre><div class='line' id='LC1'><span class="cm">/*</span></div><div class='line' id='LC2'><span class="cm"> * aight v1.0.3</span></div><div class='line' id='LC3'><span class="cm"> *</span></div><div class='line' id='LC4'><span class="cm"> * &lt;http://github.com/shawnbot/aight/&gt;</span></div><div class='line' id='LC5'><span class="cm"> *</span></div><div class='line' id='LC6'><span class="cm"> * Aight is a collection of JavaScript shims that make IE8 behave like a modern</span></div><div class='line' id='LC7'><span class="cm"> * browser (sans SVG).</span></div><div class='line' id='LC8'><span class="cm"> */</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">aight</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">appName</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">appVersion</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="o">==</span><span class="s2">&quot;Microsoft Internet Explorer&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/MSIE ([0-9]{1,}[\.0-9]{0,})/</span><span class="p">);</span><span class="nx">t</span><span class="o">=</span><span class="nx">r</span><span class="o">?</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">:</span><span class="mi">0</span><span class="p">}</span><span class="k">return</span><span class="p">{</span><span class="nx">browser</span><span class="o">:</span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">version</span><span class="o">:</span><span class="nx">t</span><span class="p">,</span><span class="nx">ie</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">ie10</span><span class="o">:</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="o">&gt;=</span><span class="mi">10</span><span class="p">,</span><span class="nx">ie9</span><span class="o">:</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="o">&gt;=</span><span class="mi">9</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="o">&lt;</span><span class="mi">10</span><span class="p">,</span><span class="nx">ie8</span><span class="o">:</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="o">&gt;=</span><span class="mi">8</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="o">&lt;</span><span class="mi">9</span><span class="p">,</span><span class="nx">ie7</span><span class="o">:</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="o">&gt;=</span><span class="mi">7</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="o">&lt;</span><span class="mi">8</span><span class="p">,</span><span class="nx">ie6</span><span class="o">:</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="o">&gt;=</span><span class="mi">6</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="o">&lt;</span><span class="mi">7</span><span class="p">}}}()})(</span><span class="k">this</span><span class="p">),</span><span class="k">typeof</span> <span class="nb">document</span><span class="o">!=</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="s2">&quot;classList&quot;</span><span class="k">in</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="s2">&quot;use strict&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="s2">&quot;classList&quot;</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="s2">&quot;prototype&quot;</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">HTMLElement</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">Element</span><span class="p">)[</span><span class="nx">n</span><span class="p">],</span><span class="nx">i</span><span class="o">=</span><span class="nb">Object</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nb">String</span><span class="p">[</span><span class="nx">n</span><span class="p">].</span><span class="nx">trim</span><span class="o">||</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^\s+|\s+$/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)},</span><span class="nx">o</span><span class="o">=</span><span class="nb">Array</span><span class="p">[</span><span class="nx">n</span><span class="p">].</span><span class="nx">indexOf</span><span class="o">||</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(;</span><span class="nx">t</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">;</span><span class="nx">t</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span> <span class="k">in</span> <span class="k">this</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">===</span><span class="nx">e</span><span class="p">)</span><span class="k">return</span> <span class="nx">t</span><span class="p">;</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">},</span><span class="nx">u</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">code</span><span class="o">=</span><span class="nx">DOMException</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="nx">t</span><span class="p">},</span><span class="nx">a</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="o">===</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">u</span><span class="p">(</span><span class="s2">&quot;SYNTAX_ERR&quot;</span><span class="p">,</span><span class="s2">&quot;An invalid or illegal string was specified&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="sr">/\s/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">t</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">u</span><span class="p">(</span><span class="s2">&quot;INVALID_CHARACTER_ERR&quot;</span><span class="p">,</span><span class="s2">&quot;String contains an invalid character&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">)},</span><span class="nx">f</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">className</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nx">t</span><span class="o">?</span><span class="nx">t</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">)</span><span class="o">:</span><span class="p">[],</span><span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(;</span><span class="nx">r</span><span class="o">&lt;</span><span class="nx">i</span><span class="p">;</span><span class="nx">r</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="nx">r</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">_updateClassName</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">toString</span><span class="p">()}},</span><span class="nx">l</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">f</span><span class="p">(</span><span class="k">this</span><span class="p">)};</span><span class="nx">u</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="nb">Error</span><span class="p">[</span><span class="nx">n</span><span class="p">],</span><span class="nx">l</span><span class="p">.</span><span class="nx">item</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">||</span><span class="kc">null</span><span class="p">},</span><span class="nx">l</span><span class="p">.</span><span class="nx">contains</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="o">+=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">!==-</span><span class="mi">1</span><span class="p">},</span><span class="nx">l</span><span class="p">.</span><span class="nx">add</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="o">+=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">===-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_updateClassName</span><span class="p">())},</span><span class="nx">l</span><span class="p">.</span><span class="nx">remove</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="o">+=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="nx">t</span><span class="o">!==-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_updateClassName</span><span class="p">())},</span><span class="nx">l</span><span class="p">.</span><span class="nx">toggle</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="o">+=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">===-</span><span class="mi">1</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">e</span><span class="p">)},</span><span class="nx">l</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)};</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">defineProperty</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="p">{</span><span class="nx">get</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">enumerable</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">configurable</span><span class="o">:!</span><span class="mi">0</span><span class="p">};</span><span class="k">try</span><span class="p">{</span><span class="nx">i</span><span class="p">.</span><span class="nx">defineProperty</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">h</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">p</span><span class="p">){</span><span class="nx">p</span><span class="p">.</span><span class="nx">number</span><span class="o">===-</span><span class="mi">2146823252</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">enumerable</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">defineProperty</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">h</span><span class="p">))}}</span><span class="k">else</span> <span class="nx">i</span><span class="p">[</span><span class="nx">n</span><span class="p">].</span><span class="nx">__defineGetter__</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">.</span><span class="nx">__defineGetter__</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">c</span><span class="p">)}(</span><span class="nx">self</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">typeof</span> <span class="nx">define</span><span class="o">==</span><span class="s2">&quot;function&quot;</span><span class="o">?</span><span class="nx">define</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">()}(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">defineProperty</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;sentinel&quot;</span><span class="p">,{}),</span><span class="s2">&quot;sentinel&quot;</span><span class="k">in</span> <span class="nx">e</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">t</span><span class="p">){}}</span><span class="nb">Function</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">bind</span><span class="o">||</span><span class="p">(</span><span class="nb">Function</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">bind</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">n</span><span class="o">!=</span><span class="s2">&quot;function&quot;</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;Function.prototype.bind called on incompatible &quot;</span><span class="o">+</span><span class="nx">n</span><span class="p">);</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">s</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span> <span class="k">instanceof</span> <span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(){};</span><span class="nx">e</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="k">new</span> <span class="nx">e</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">)));</span><span class="k">return</span> <span class="nb">Object</span><span class="p">(</span><span class="nx">u</span><span class="p">)</span><span class="o">===</span><span class="nx">u</span><span class="o">?</span><span class="nx">u</span><span class="o">:</span><span class="nx">o</span><span class="p">}</span><span class="k">return</span> <span class="nx">n</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">)))};</span><span class="k">return</span> <span class="nx">s</span><span class="p">});</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nb">Function</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">call</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">slice</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">toString</span><span class="p">),</span><span class="nx">s</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">),</span><span class="nx">o</span><span class="p">,</span><span class="nx">u</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">l</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="s2">&quot;__defineGetter__&quot;</span><span class="p">))</span><span class="nx">o</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">__defineGetter__</span><span class="p">),</span><span class="nx">u</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">__defineSetter__</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">__lookupGetter__</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">__lookupSetter__</span><span class="p">);</span><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="o">||</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">i</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">==</span><span class="s2">&quot;[object Array]&quot;</span><span class="p">}),</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">forEach</span><span class="o">||</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">forEach</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">s</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;&gt;&gt;</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">!=</span><span class="s2">&quot;[object Function]&quot;</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="o">++</span><span class="nx">s</span><span class="o">&lt;</span><span class="nx">o</span><span class="p">)</span><span class="nx">s</span> <span class="k">in</span> <span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">[</span><span class="nx">s</span><span class="p">],</span><span class="nx">s</span><span class="p">,</span><span class="nx">n</span><span class="p">)}),</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">map</span><span class="o">||</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">map</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;&gt;&gt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nb">Array</span><span class="p">(</span><span class="nx">r</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">!=</span><span class="s2">&quot;[object Function]&quot;</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="nx">t</span><span class="o">+</span><span class="s2">&quot; is not a function&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">u</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">;</span><span class="nx">u</span><span class="o">++</span><span class="p">)</span><span class="nx">u</span> <span class="k">in</span> <span class="nx">n</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">s</span><span class="p">[</span><span class="nx">u</span><span class="p">]</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="nx">n</span><span class="p">[</span><span class="nx">u</span><span class="p">],</span><span class="nx">u</span><span class="p">,</span><span class="nx">n</span><span class="p">));</span><span class="k">return</span> <span class="nx">s</span><span class="p">}),</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">filter</span><span class="o">||</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">filter</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;&gt;&gt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="p">[],</span><span class="nx">o</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">!=</span><span class="s2">&quot;[object Function]&quot;</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="nx">t</span><span class="o">+</span><span class="s2">&quot; is not a function&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span> <span class="k">in</span> <span class="nx">n</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">o</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">u</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">n</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">o</span><span class="p">));</span><span class="k">return</span> <span class="nx">s</span><span class="p">}),</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">every</span><span class="o">||</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">every</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;&gt;&gt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">!=</span><span class="s2">&quot;[object Function]&quot;</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="nx">t</span><span class="o">+</span><span class="s2">&quot; is not a function&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">o</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">;</span><span class="nx">o</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span> <span class="k">in</span> <span class="nx">n</span><span class="o">&amp;&amp;!</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">n</span><span class="p">[</span><span class="nx">o</span><span class="p">],</span><span class="nx">o</span><span class="p">,</span><span class="nx">n</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">}),</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">some</span><span class="o">||</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">some</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;&gt;&gt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">!=</span><span class="s2">&quot;[object Function]&quot;</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="nx">t</span><span class="o">+</span><span class="s2">&quot; is not a function&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">o</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">;</span><span class="nx">o</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span> <span class="k">in</span> <span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">n</span><span class="p">[</span><span class="nx">o</span><span class="p">],</span><span class="nx">o</span><span class="p">,</span><span class="nx">n</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}),</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">reduce</span><span class="o">||</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">reduce</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;&gt;&gt;</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">!=</span><span class="s2">&quot;[object Function]&quot;</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="nx">t</span><span class="o">+</span><span class="s2">&quot; is not a function&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="mi">1</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;reduce of empty array with no initial value&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">o</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;=</span><span class="mi">2</span><span class="p">)</span><span class="nx">o</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">else</span> <span class="k">do</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span> <span class="k">in</span> <span class="nx">n</span><span class="p">){</span><span class="nx">o</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">s</span><span class="o">++</span><span class="p">];</span><span class="k">break</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">++</span><span class="nx">s</span><span class="o">&gt;=</span><span class="nx">r</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;reduce of empty array with no initial value&quot;</span><span class="p">)}</span><span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">for</span><span class="p">(;</span><span class="nx">s</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">;</span><span class="nx">s</span><span class="o">++</span><span class="p">)</span><span class="nx">s</span> <span class="k">in</span> <span class="nx">n</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">o</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">n</span><span class="p">[</span><span class="nx">s</span><span class="p">],</span><span class="nx">s</span><span class="p">,</span><span class="nx">n</span><span class="p">));</span><span class="k">return</span> <span class="nx">o</span><span class="p">}),</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">reduceRight</span><span class="o">||</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">reduceRight</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;&gt;&gt;</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">!=</span><span class="s2">&quot;[object Function]&quot;</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="nx">t</span><span class="o">+</span><span class="s2">&quot; is not a function&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="mi">1</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;reduceRight of empty array with no initial value&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">s</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">r</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;=</span><span class="mi">2</span><span class="p">)</span><span class="nx">s</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">else</span> <span class="k">do</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span> <span class="k">in</span> <span class="nx">n</span><span class="p">){</span><span class="nx">s</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">o</span><span class="o">--</span><span class="p">];</span><span class="k">break</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">--</span><span class="nx">o</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;reduceRight of empty array with no initial value&quot;</span><span class="p">)}</span><span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">do</span> <span class="nx">o</span> <span class="k">in</span> <span class="k">this</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">n</span><span class="p">[</span><span class="nx">o</span><span class="p">],</span><span class="nx">o</span><span class="p">,</span><span class="nx">n</span><span class="p">));</span><span class="k">while</span><span class="p">(</span><span class="nx">o</span><span class="o">--</span><span class="p">);</span><span class="k">return</span> <span class="nx">s</span><span class="p">}),</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">indexOf</span><span class="o">||</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">indexOf</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;&gt;&gt;</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">r</span><span class="p">)</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">k</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">])),</span><span class="nx">i</span><span class="o">=</span><span class="nx">i</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">?</span><span class="nx">i</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">r</span><span class="o">+</span><span class="nx">i</span><span class="p">);</span><span class="k">for</span><span class="p">(;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span> <span class="k">in</span> <span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">===</span><span class="nx">t</span><span class="p">)</span><span class="k">return</span> <span class="nx">i</span><span class="p">;</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">}),</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="o">||</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">A</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;&gt;&gt;</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">r</span><span class="p">)</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">r</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">k</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">]))),</span><span class="nx">i</span><span class="o">=</span><span class="nx">i</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">?</span><span class="nx">i</span><span class="o">:</span><span class="nx">r</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="k">for</span><span class="p">(;</span><span class="nx">i</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">--</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span> <span class="k">in</span> <span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="o">===</span><span class="nx">n</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span><span class="k">return</span> <span class="nx">i</span><span class="p">;</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">}),</span><span class="nb">Object</span><span class="p">.</span><span class="nx">getPrototypeOf</span><span class="o">||</span><span class="p">(</span><span class="nb">Object</span><span class="p">.</span><span class="nx">getPrototypeOf</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">__proto__</span><span class="o">||</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">constructor</span><span class="o">?</span><span class="nx">t</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">prototype</span><span class="o">:</span><span class="nx">n</span><span class="p">)});</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">Object</span><span class="p">.</span><span class="nx">getOwnPropertyDescriptor</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="s2">&quot;Object.getOwnPropertyDescriptor called on a non-object: &quot;</span><span class="p">;</span><span class="nb">Object</span><span class="p">.</span><span class="nx">getOwnPropertyDescriptor</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">t</span><span class="o">!=</span><span class="s2">&quot;object&quot;</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">t</span><span class="o">!=</span><span class="s2">&quot;function&quot;</span><span class="o">||</span><span class="nx">t</span><span class="o">===</span><span class="kc">null</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">t</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">s</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">))</span><span class="k">return</span><span class="p">;</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="p">{</span><span class="nx">enumerable</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">configurable</span><span class="o">:!</span><span class="mi">0</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">){</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">__proto__</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">__proto__</span><span class="o">=</span><span class="nx">n</span><span class="p">;</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">__proto__</span><span class="o">=</span><span class="nx">o</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">u</span><span class="o">||</span><span class="nx">h</span><span class="p">)</span><span class="k">return</span> <span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">get</span><span class="o">=</span><span class="nx">u</span><span class="p">),</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">set</span><span class="o">=</span><span class="nx">h</span><span class="p">),</span><span class="nx">i</span><span class="p">}</span><span class="k">return</span> <span class="nx">i</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">r</span><span class="p">],</span><span class="nx">i</span><span class="p">}}</span><span class="nb">Object</span><span class="p">.</span><span class="nx">getOwnPropertyNames</span><span class="o">||</span><span class="p">(</span><span class="nb">Object</span><span class="p">.</span><span class="nx">getOwnPropertyNames</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">t</span><span class="p">)}),</span><span class="nb">Object</span><span class="p">.</span><span class="nx">create</span><span class="o">||</span><span class="p">(</span><span class="nb">Object</span><span class="p">.</span><span class="nx">create</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="o">===</span><span class="kc">null</span><span class="p">)</span><span class="nx">r</span><span class="o">=</span><span class="p">{</span><span class="nx">__proto__</span><span class="o">:</span><span class="kc">null</span><span class="p">};</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">t</span><span class="o">!=</span><span class="s2">&quot;object&quot;</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;typeof prototype[&quot;</span><span class="o">+</span><span class="k">typeof</span> <span class="nx">t</span><span class="o">+</span><span class="s2">&quot;] != &#39;object&#39;&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="kd">function</span><span class="p">(){};</span><span class="nx">i</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="k">new</span> <span class="nx">i</span><span class="p">,</span><span class="nx">r</span><span class="p">.</span><span class="nx">__proto__</span><span class="o">=</span><span class="nx">t</span><span class="p">}</span><span class="k">return</span> <span class="nx">n</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nb">Object</span><span class="p">.</span><span class="nx">defineProperties</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">),</span><span class="nx">r</span><span class="p">});</span><span class="k">if</span><span class="p">(</span><span class="nb">Object</span><span class="p">.</span><span class="nx">defineProperty</span><span class="p">){</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">h</span><span class="p">({}),</span><span class="nx">d</span><span class="o">=</span><span class="k">typeof</span> <span class="nb">document</span><span class="o">==</span><span class="s2">&quot;undefined&quot;</span><span class="o">||</span><span class="nx">h</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">p</span><span class="o">||!</span><span class="nx">d</span><span class="p">)</span><span class="kd">var</span> <span class="nx">v</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">defineProperty</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">Object</span><span class="p">.</span><span class="nx">defineProperty</span><span class="o">||</span><span class="nx">v</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="s2">&quot;Property description must be an object: &quot;</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;Object.defineProperty called on non-object: &quot;</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="s2">&quot;getters &amp; setters can not be defined on this javascript engine&quot;</span><span class="p">;</span><span class="nb">Object</span><span class="p">.</span><span class="nx">defineProperty</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">t</span><span class="o">!=</span><span class="s2">&quot;object&quot;</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">t</span><span class="o">!=</span><span class="s2">&quot;function&quot;</span><span class="o">||</span><span class="nx">t</span><span class="o">===</span><span class="kc">null</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="nx">g</span><span class="o">+</span><span class="nx">t</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">i</span><span class="o">!=</span><span class="s2">&quot;object&quot;</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">i</span><span class="o">!=</span><span class="s2">&quot;function&quot;</span><span class="o">||</span><span class="nx">i</span><span class="o">===</span><span class="kc">null</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="nx">m</span><span class="o">+</span><span class="nx">i</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="nx">v</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nb">Object</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">i</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){}</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="s2">&quot;value&quot;</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">)</span><span class="o">||</span><span class="nx">f</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">))){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">__proto__</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">__proto__</span><span class="o">=</span><span class="nx">n</span><span class="p">,</span><span class="k">delete</span> <span class="nx">t</span><span class="p">[</span><span class="nx">r</span><span class="p">],</span><span class="nx">t</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">__proto__</span><span class="o">=</span><span class="nx">h</span><span class="p">}</span><span class="k">else</span> <span class="nx">t</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">l</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="nx">y</span><span class="p">);</span><span class="nx">s</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="s2">&quot;get&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">get</span><span class="p">),</span><span class="nx">s</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="s2">&quot;set&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">u</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">set</span><span class="p">)}</span><span class="k">return</span> <span class="nx">t</span><span class="p">}}</span><span class="nb">Object</span><span class="p">.</span><span class="nx">defineProperties</span><span class="o">||</span><span class="p">(</span><span class="nb">Object</span><span class="p">.</span><span class="nx">defineProperties</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">r</span> <span class="k">in</span> <span class="nx">n</span><span class="p">)</span><span class="nx">s</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="o">!=</span><span class="s2">&quot;__proto__&quot;</span><span class="o">&amp;&amp;</span><span class="nb">Object</span><span class="p">.</span><span class="nx">defineProperty</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">[</span><span class="nx">r</span><span class="p">]);</span><span class="k">return</span> <span class="nx">t</span><span class="p">}),</span><span class="nb">Object</span><span class="p">.</span><span class="nx">seal</span><span class="o">||</span><span class="p">(</span><span class="nb">Object</span><span class="p">.</span><span class="nx">seal</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="p">}),</span><span class="nb">Object</span><span class="p">.</span><span class="nx">freeze</span><span class="o">||</span><span class="p">(</span><span class="nb">Object</span><span class="p">.</span><span class="nx">freeze</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="p">});</span><span class="k">try</span><span class="p">{</span><span class="nb">Object</span><span class="p">.</span><span class="nx">freeze</span><span class="p">(</span><span class="kd">function</span><span class="p">(){})}</span><span class="k">catch</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nb">Object</span><span class="p">.</span><span class="nx">freeze</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">n</span><span class="o">==</span><span class="s2">&quot;function&quot;</span><span class="o">?</span><span class="nx">n</span><span class="o">:</span><span class="nx">t</span><span class="p">(</span><span class="nx">n</span><span class="p">)}}(</span><span class="nb">Object</span><span class="p">.</span><span class="nx">freeze</span><span class="p">)}</span><span class="nb">Object</span><span class="p">.</span><span class="nx">preventExtensions</span><span class="o">||</span><span class="p">(</span><span class="nb">Object</span><span class="p">.</span><span class="nx">preventExtensions</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="p">}),</span><span class="nb">Object</span><span class="p">.</span><span class="nx">isSealed</span><span class="o">||</span><span class="p">(</span><span class="nb">Object</span><span class="p">.</span><span class="nx">isSealed</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}),</span><span class="nb">Object</span><span class="p">.</span><span class="nx">isFrozen</span><span class="o">||</span><span class="p">(</span><span class="nb">Object</span><span class="p">.</span><span class="nx">isFrozen</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}),</span><span class="nb">Object</span><span class="p">.</span><span class="nx">isExtensible</span><span class="o">||</span><span class="p">(</span><span class="nb">Object</span><span class="p">.</span><span class="nx">isExtensible</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nb">Object</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">===</span><span class="nx">t</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">;</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">s</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">))</span><span class="nx">n</span><span class="o">+=</span><span class="s2">&quot;?&quot;</span><span class="p">;</span><span class="nx">t</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">);</span><span class="k">return</span> <span class="k">delete</span> <span class="nx">t</span><span class="p">[</span><span class="nx">n</span><span class="p">],</span><span class="nx">r</span><span class="p">});</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">){</span><span class="kd">var</span> <span class="nx">w</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">E</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;toString&quot;</span><span class="p">,</span><span class="s2">&quot;toLocaleString&quot;</span><span class="p">,</span><span class="s2">&quot;valueOf&quot;</span><span class="p">,</span><span class="s2">&quot;hasOwnProperty&quot;</span><span class="p">,</span><span class="s2">&quot;isPrototypeOf&quot;</span><span class="p">,</span><span class="s2">&quot;propertyIsEnumerable&quot;</span><span class="p">,</span><span class="s2">&quot;constructor&quot;</span><span class="p">],</span><span class="nx">S</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">x</span> <span class="k">in</span><span class="p">{</span><span class="nx">toString</span><span class="o">:</span><span class="kc">null</span><span class="p">})</span><span class="nx">w</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="o">=</span><span class="kd">function</span> <span class="nx">O</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">e</span><span class="o">!=</span><span class="s2">&quot;object&quot;</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">e</span><span class="o">!=</span><span class="s2">&quot;function&quot;</span><span class="o">||</span><span class="nx">e</span><span class="o">===</span><span class="kc">null</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;Object.keys called on a non-object&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">O</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">t</span> <span class="k">in</span> <span class="nx">e</span><span class="p">)</span><span class="nx">s</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">O</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">S</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">;</span><span class="nx">n</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">E</span><span class="p">[</span><span class="nx">n</span><span class="p">];</span><span class="nx">s</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">O</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">i</span><span class="p">)}</span><span class="k">return</span> <span class="nx">O</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toISOString</span><span class="o">||</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="o">-</span><span class="mi">621987552</span><span class="nx">e5</span><span class="p">)).</span><span class="nx">toISOString</span><span class="p">().</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;-000001&quot;</span><span class="p">)</span><span class="o">===-</span><span class="mi">1</span><span class="p">)</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toISOString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">i</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">isFinite</span><span class="p">(</span><span class="k">this</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">RangeError</span><span class="p">(</span><span class="s2">&quot;Date.prototype.toISOString called on non-finite value.&quot;</span><span class="p">);</span><span class="nx">t</span><span class="o">=</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">getUTCMonth</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">getUTCDate</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">getUTCHours</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">getUTCMinutes</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">getUTCSeconds</span><span class="p">()],</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getUTCFullYear</span><span class="p">(),</span><span class="nx">i</span><span class="o">=</span><span class="p">(</span><span class="nx">i</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">?</span><span class="s2">&quot;-&quot;</span><span class="o">:</span><span class="nx">i</span><span class="o">&gt;</span><span class="mi">9999</span><span class="o">?</span><span class="s2">&quot;+&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;00000&quot;</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">i</span><span class="p">)).</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="o">&lt;=</span><span class="mi">9999</span><span class="o">?-</span><span class="mi">4</span><span class="o">:-</span><span class="mi">6</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">n</span><span class="o">--</span><span class="p">)</span><span class="nx">r</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">n</span><span class="p">],</span><span class="nx">r</span><span class="o">&lt;</span><span class="mi">10</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;0&quot;</span><span class="o">+</span><span class="nx">r</span><span class="p">);</span><span class="k">return</span> <span class="nx">i</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">t</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;-&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;T&quot;</span><span class="o">+</span><span class="nx">t</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">2</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;:&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;000&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">getUTCMilliseconds</span><span class="p">()).</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">3</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;Z&quot;</span><span class="p">};</span><span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="o">||</span><span class="p">(</span><span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">).</span><span class="nx">getTime</span><span class="p">()}),</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toJSON</span><span class="o">||</span><span class="p">(</span><span class="nb">Date</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toJSON</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">toISOString</span><span class="o">!=</span><span class="s2">&quot;function&quot;</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;toISOString property is not callable&quot;</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">toISOString</span><span class="p">()});</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">Date</span><span class="p">.</span><span class="nx">parse</span><span class="o">||</span><span class="nb">Date</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="s2">&quot;+275760-09-13T00:00:00.000Z&quot;</span><span class="p">)</span><span class="o">!==</span><span class="mi">864</span><span class="nx">e13</span><span class="p">)</span><span class="nb">Date</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">u</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span> <span class="k">instanceof</span> <span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">f</span><span class="o">==</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nb">String</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">===</span><span class="nx">t</span><span class="o">?</span><span class="k">new</span> <span class="nx">e</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">t</span><span class="p">))</span><span class="o">:</span><span class="nx">f</span><span class="o">&gt;=</span><span class="mi">7</span><span class="o">?</span><span class="k">new</span> <span class="nx">e</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">u</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="o">&gt;=</span><span class="mi">6</span><span class="o">?</span><span class="k">new</span> <span class="nx">e</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">u</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="o">&gt;=</span><span class="mi">5</span><span class="o">?</span><span class="k">new</span> <span class="nx">e</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">o</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="o">&gt;=</span><span class="mi">4</span><span class="o">?</span><span class="k">new</span> <span class="nx">e</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">s</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="o">&gt;=</span><span class="mi">3</span><span class="o">?</span><span class="k">new</span> <span class="nx">e</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="o">&gt;=</span><span class="mi">2</span><span class="o">?</span><span class="k">new</span> <span class="nx">e</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="o">&gt;=</span><span class="mi">1</span><span class="o">?</span><span class="k">new</span> <span class="nx">e</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">:</span><span class="k">new</span> <span class="nx">e</span><span class="p">;</span><span class="k">return</span> <span class="nx">l</span><span class="p">.</span><span class="nx">constructor</span><span class="o">=</span><span class="nx">i</span><span class="p">,</span><span class="nx">l</span><span class="p">}</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)},</span><span class="nx">n</span><span class="o">=</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;^(\\d{4}|[+-]\\d{6})(?:-(\\d{2})(?:-(\\d{2})(?:T(\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d{3}))?)?(?:Z|(?:([-+])(\\d{2}):(\\d{2})))?)?)?)?$&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">r</span> <span class="k">in</span> <span class="nx">e</span><span class="p">)</span><span class="nx">t</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">r</span><span class="p">];</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">now</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">now</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">UTC</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">UTC</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">constructor</span><span class="o">=</span><span class="nx">t</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">parse</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">r</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">r</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="nx">i</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">s</span><span class="o">&lt;</span><span class="mi">7</span><span class="p">;</span><span class="nx">s</span><span class="o">++</span><span class="p">)</span><span class="nx">i</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">=+</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">s</span><span class="o">&lt;</span><span class="mi">3</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">)),</span><span class="nx">s</span><span class="o">==</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">--</span><span class="p">;</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=+</span><span class="nx">i</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">u</span><span class="o">=+</span><span class="nx">i</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">a</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">u</span><span class="o">&gt;</span><span class="mi">23</span><span class="o">||</span><span class="nx">o</span><span class="o">&gt;</span><span class="mi">59</span><span class="p">)</span><span class="k">return</span> <span class="kc">NaN</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="p">(</span><span class="nx">u</span><span class="o">*</span><span class="mi">60</span><span class="o">+</span><span class="nx">o</span><span class="p">)</span><span class="o">*</span><span class="mi">6</span><span class="nx">e4</span><span class="o">*</span><span class="p">(</span><span class="nx">a</span><span class="o">==</span><span class="s2">&quot;+&quot;</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=+</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">return</span> <span class="mi">0</span><span class="o">&lt;=</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="o">&lt;=</span><span class="mi">99</span><span class="o">?</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">l</span><span class="o">+</span><span class="mi">400</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">UTC</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">i</span><span class="p">)</span><span class="o">+</span><span class="nx">f</span><span class="o">-</span><span class="mi">126227808</span><span class="nx">e5</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">UTC</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">i</span><span class="p">)</span><span class="o">+</span><span class="nx">f</span><span class="p">}</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">parse</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)},</span><span class="nx">t</span><span class="p">}(</span><span class="nb">Date</span><span class="p">);</span><span class="kd">var</span> <span class="nx">T</span><span class="o">=</span><span class="s2">&quot;	\n\f\r   ᠎             　\u2028\u2029﻿&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">String</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">trim</span><span class="o">||</span><span class="nx">T</span><span class="p">.</span><span class="nx">trim</span><span class="p">()){</span><span class="nx">T</span><span class="o">=</span><span class="s2">&quot;[&quot;</span><span class="o">+</span><span class="nx">T</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">N</span><span class="o">=</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;^&quot;</span><span class="o">+</span><span class="nx">T</span><span class="o">+</span><span class="nx">T</span><span class="o">+</span><span class="s2">&quot;*&quot;</span><span class="p">),</span><span class="nx">C</span><span class="o">=</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="nx">T</span><span class="o">+</span><span class="nx">T</span><span class="o">+</span><span class="s2">&quot;*$&quot;</span><span class="p">);</span><span class="nb">String</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">trim</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="o">===</span><span class="kc">undefined</span><span class="o">||</span><span class="k">this</span><span class="o">===</span><span class="kc">null</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;can&#39;t convert &quot;</span><span class="o">+</span><span class="k">this</span><span class="o">+</span><span class="s2">&quot; to object&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nb">String</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">N</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)}}</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="o">=+</span><span class="nx">e</span><span class="p">,</span><span class="nx">e</span><span class="o">!==</span><span class="nx">e</span><span class="o">?</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="o">:</span><span class="nx">e</span><span class="o">!==</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">!==</span><span class="mi">1</span><span class="o">/</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">!==-</span><span class="mi">1</span><span class="o">/</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="p">(</span><span class="nx">e</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">||-</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">e</span><span class="p">))),</span><span class="nx">e</span><span class="p">},</span><span class="nx">L</span><span class="o">=</span><span class="s2">&quot;a&quot;</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">!=</span><span class="s2">&quot;a&quot;</span><span class="p">,</span><span class="nx">A</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">==</span><span class="kc">null</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;can&#39;t convert &quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot; to object&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">L</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">e</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nb">Object</span><span class="p">(</span><span class="nx">e</span><span class="p">)}}),</span><span class="nb">window</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="o">||</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">getPropertyValue</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="sr">/(\-([a-z]){1})/g</span><span class="p">;</span><span class="k">return</span> <span class="nx">t</span><span class="o">==</span><span class="s2">&quot;float&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="s2">&quot;styleFloat&quot;</span><span class="p">),</span><span class="nx">n</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">arguments</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="nx">toUpperCase</span><span class="p">()})),</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">currentStyle</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">:</span><span class="kc">null</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="k">this</span><span class="p">}),</span><span class="nx">CSSStyleDeclaration</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getPropertyValue</span><span class="o">||</span><span class="p">(</span><span class="nx">CSSStyleDeclaration</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getPropertyValue</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">e</span><span class="p">)},</span><span class="nx">CSSStyleDeclaration</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setProperty</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nb">String</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">t</span><span class="p">)},</span><span class="nx">CSSStyleDeclaration</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">removeProperty</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="p">(</span><span class="nx">e</span><span class="p">)}),</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElementNS</span><span class="o">||</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElementNS</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="k">throw</span><span class="s2">&quot;sorry, this browser does not support namespaces&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">t</span><span class="p">)}),</span><span class="nx">Element</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">||</span><span class="p">(</span><span class="nx">Element</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">this</span><span class="p">[</span><span class="s2">&quot;e&quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="nx">t</span><span class="p">;</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">[</span><span class="nx">e</span><span class="o">+</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">)},</span><span class="k">this</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">[</span><span class="nx">e</span><span class="o">+</span><span class="nx">t</span><span class="p">])},</span><span class="nx">Element</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">this</span><span class="p">[</span><span class="s2">&quot;e&quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">detachEvent</span><span class="p">(</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">[</span><span class="nx">e</span><span class="o">+</span><span class="nx">t</span><span class="p">]);</span><span class="k">return</span> <span class="k">this</span><span class="p">[</span><span class="nx">e</span><span class="o">+</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">n</span><span class="p">}),</span><span class="kd">function</span><span class="p">(){</span><span class="k">try</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nb">Object</span><span class="p">.</span><span class="nx">defineProperty</span><span class="o">&amp;&amp;</span><span class="nb">Object</span><span class="p">.</span><span class="nx">getOwnPropertyDescriptor</span><span class="o">&amp;&amp;</span><span class="nb">Object</span><span class="p">.</span><span class="nx">getOwnPropertyDescriptor</span><span class="p">(</span><span class="nx">Element</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="s2">&quot;textContent&quot;</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nb">Object</span><span class="p">.</span><span class="nx">getOwnPropertyDescriptor</span><span class="p">(</span><span class="nx">Element</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="s2">&quot;textContent&quot;</span><span class="p">).</span><span class="nx">get</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">getOwnPropertyDescriptor</span><span class="p">(</span><span class="nx">Element</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="s2">&quot;innerText&quot;</span><span class="p">);</span><span class="nb">Object</span><span class="p">.</span><span class="nx">defineProperty</span><span class="p">(</span><span class="nx">Element</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="s2">&quot;textContent&quot;</span><span class="p">,{</span><span class="nx">get</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">get</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">)},</span><span class="nx">set</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">set</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">t</span><span class="p">)}})}}</span><span class="k">catch</span><span class="p">(</span><span class="nx">t</span><span class="p">){}}();</span></div></pre></div>
          </td>
        </tr>
      </table>
  </div>

          </div>
        </div>

        <a href="#jump-to-line" rel="facebox" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
        <div id="jump-to-line" style="display:none">
          <h2>Jump to Line</h2>
          <form accept-charset="UTF-8" class="js-jump-to-line-form">
            <input class="textfield js-jump-to-line-field" type="text">
            <div class="full-button">
              <button type="submit" class="button">Go</button>
            </div>
          </form>
        </div>

      </div>
    </div>
</div>

<div id="js-frame-loading-template" class="frame frame-loading large-loading-area" style="display:none;">
  <img class="js-frame-loading-spinner" src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-128.gif?1347543527" height="64" width="64">
</div>


        </div>
      </div>
      <div class="context-overlay"></div>
    </div>

      <div id="footer-push"></div><!-- hack for sticky footer -->
    </div><!-- end of wrapper - hack for sticky footer -->

      <!-- footer -->
      <div id="footer">
  <div class="container clearfix">

      <dl class="footer_nav">
        <dt>GitHub</dt>
        <dd><a href="https://github.com/about">About us</a></dd>
        <dd><a href="https://github.com/blog">Blog</a></dd>
        <dd><a href="https://github.com/contact">Contact &amp; support</a></dd>
        <dd><a href="http://enterprise.github.com/">GitHub Enterprise</a></dd>
        <dd><a href="http://status.github.com/">Site status</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Applications</dt>
        <dd><a href="http://mac.github.com/">GitHub for Mac</a></dd>
        <dd><a href="http://windows.github.com/">GitHub for Windows</a></dd>
        <dd><a href="http://eclipse.github.com/">GitHub for Eclipse</a></dd>
        <dd><a href="http://mobile.github.com/">GitHub mobile apps</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Services</dt>
        <dd><a href="http://get.gaug.es/">Gauges: Web analytics</a></dd>
        <dd><a href="http://speakerdeck.com">Speaker Deck: Presentations</a></dd>
        <dd><a href="https://gist.github.com">Gist: Code snippets</a></dd>
        <dd><a href="http://jobs.github.com/">Job board</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Documentation</dt>
        <dd><a href="http://help.github.com/">GitHub Help</a></dd>
        <dd><a href="http://developer.github.com/">Developer API</a></dd>
        <dd><a href="http://github.github.com/github-flavored-markdown/">GitHub Flavored Markdown</a></dd>
        <dd><a href="http://pages.github.com/">GitHub Pages</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>More</dt>
        <dd><a href="http://training.github.com/">Training</a></dd>
        <dd><a href="https://github.com/edu">Students &amp; teachers</a></dd>
        <dd><a href="http://shop.github.com">The Shop</a></dd>
        <dd><a href="/plans">Plans &amp; pricing</a></dd>
        <dd><a href="http://octodex.github.com/">The Octodex</a></dd>
      </dl>

      <hr class="footer-divider">


    <p class="right">&copy; 2013 <span title="0.04701s from fe2.rs.github.com">GitHub</span>, Inc. All rights reserved.</p>
    <a class="left" href="https://github.com/">
      <span class="mega-icon mega-icon-invertocat"></span>
    </a>
    <ul id="legal">
        <li><a href="https://github.com/site/terms">Terms of Service</a></li>
        <li><a href="https://github.com/site/privacy">Privacy</a></li>
        <li><a href="https://github.com/security">Security</a></li>
    </ul>

  </div><!-- /.container -->

</div><!-- /.#footer -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
          <div class="suggester-container">
              <div class="suggester fullscreen-suggester js-navigation-container" id="fullscreen_suggester"
                 data-url="/shawnbot/aight/suggestions/commit">
              </div>
          </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped leftwards" title="Exit Zen Mode">
      <span class="mega-icon mega-icon-normalscreen"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped leftwards"
      title="Switch themes">
      <span class="mini-icon mini-icon-brightness"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="mini-icon mini-icon-exclamation"></span>
      Something went wrong with that request. Please try again.
      <a href="#" class="mini-icon mini-icon-remove-close ajax-error-dismiss"></a>
    </div>

    
    
    <span id='server_response_time' data-time='0.04747' data-host='fe2'></span>
    
  </body>
</html>

